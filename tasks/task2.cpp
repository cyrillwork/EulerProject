#include "task2.h"
//#include <thread>

ITask::ResType Task2::Process()
{
    size_t N1 = 1;
    size_t N2 = 2;

    result = N2;

    //std::this_thread::sleep_for(std::chrono::seconds(1));

    while (true)
    {
        size_t Temp = N1 + N2;

        if(Temp > 4000000)
        {
            break;
        }

        if(isEven(Temp))
        { //even check
            result += Temp;
        }

        N1 = N2;
        N2 = Temp;
    }

    return result;
}

std::string Task2::getDescriptionEng()
{
    return std::string("Task 2\n"
    "Each new term in the Fibonacci sequence is generated by adding the previous two terms.\n"
    "By starting with 1 and 2, the first 10 terms will be:\n"
    "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n"
    "By considering the terms in the Fibonacci sequence whose values do not exceed four million,\n"
    "find the sum of the even-valued terms.");
}

std::string Task2::getDescriptionRus()
{
    return std::string("Задача 2\n"
    "Каждый следующий элемент ряда Фибоначчи получается при сложении двух предыдущих. \n"
    "Начиная с 1 и 2, первые 10 элементов будут:\n"
    "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n"
    "Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают четыре миллиона.\n");
}
